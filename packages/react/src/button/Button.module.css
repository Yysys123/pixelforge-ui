/* Button base styles with brutalist design */
.button {
  /* Base styles */
  position: relative;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  gap: var(--pf-spacing-2);
  font-family: var(--pf-font-family-sans);
  font-weight: 700;
  line-height: var(--pf-line-height-none);
  text-decoration: none;
  text-transform: uppercase;
  letter-spacing: 0.05em;
  border: 0.15em solid var(--pf-color-text, #000);
  border-radius: 0.3em;
  cursor: pointer;
  transition: all 0.2s ease;
  user-select: none;
  overflow: hidden;
  
  /* Brutalist shadow */
  box-shadow: 0.2em 0.2em 0 var(--pf-color-text, #000);
  
  /* Shine effect */
  &::before {
    content: "";
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent 0%,
      rgba(255, 255, 255, 0.2) 50%,
      transparent 100%
    );
    transition: left 0.6s ease;
  }
  
  /* Focus styles */
  &:focus-visible {
    outline: 2px solid var(--pf-color-primary-500);
    outline-offset: 2px;
  }
  
  /* Hover styles */
  &:hover:not(:disabled) {
    transform: translate(-0.1em, -0.1em);
    box-shadow: 0.3em 0.3em 0 var(--pf-color-text, #000);
  }
  
  &:hover:not(:disabled)::before {
    left: 100%;
  }
  
  /* Active styles */
  &:active:not(:disabled) {
    transform: translate(0.05em, 0.05em);
    box-shadow: 0.1em 0.1em 0 var(--pf-color-text, #000);
  }
  
  /* Disabled styles */
  &:disabled {
    cursor: not-allowed;
    opacity: 0.5;
    transform: none;
    box-shadow: 0.2em 0.2em 0 var(--pf-color-text, #000);
  }
}

/* Size variants */
.size-sm {
  padding: 0.5em 0.8em;
  font-size: 0.75em;
  min-height: 32px;
}

.size-md {
  padding: 0.7em 1.2em;
  font-size: 0.9em;
  min-height: 40px;
}

.size-lg {
  padding: 0.9em 1.6em;
  font-size: 1em;
  min-height: 48px;
}

/* Variant styles */
.variant-primary {
  background: var(--pf-color-primary-500, #3b82f6);
  color: var(--pf-color-surface, #fff);
  
  &:hover:not(:disabled) {
    background: var(--pf-color-primary-600, #2563eb);
  }
  
  &:active:not(:disabled) {
    background: var(--pf-color-primary-700, #1d4ed8);
  }
}

.variant-secondary {
  background: var(--pf-color-secondary-500, #6b21a8);
  color: var(--pf-color-surface, #fff);
  
  &:hover:not(:disabled) {
    background: var(--pf-color-secondary-600, #581c87);
  }
  
  &:active:not(:disabled) {
    background: var(--pf-color-secondary-700, #4c1d95);
  }
}

.variant-outline {
  background: transparent;
  color: var(--pf-color-primary-500, #3b82f6);
  
  &:hover:not(:disabled) {
    background: var(--pf-color-primary-50, #eff6ff);
    color: var(--pf-color-primary-600, #2563eb);
  }
  
  &:active:not(:disabled) {
    background: var(--pf-color-primary-100, #dbeafe);
    color: var(--pf-color-primary-700, #1d4ed8);
  }
}

.variant-ghost {
  background: transparent;
  color: var(--pf-color-primary-500, #3b82f6);
  border-color: transparent;
  box-shadow: none;
  
  &:hover:not(:disabled) {
    background: var(--pf-color-primary-50, #eff6ff);
    color: var(--pf-color-primary-600, #2563eb);
    box-shadow: 0.2em 0.2em 0 var(--pf-color-text, #000);
  }
  
  &:active:not(:disabled) {
    background: var(--pf-color-primary-100, #dbeafe);
    color: var(--pf-color-primary-700, #1d4ed8);
    box-shadow: 0.1em 0.1em 0 var(--pf-color-text, #000);
  }
}

.variant-danger {
  background: var(--pf-color-danger-500, #ef4444);
  color: var(--pf-color-surface, #fff);
  
  &:hover:not(:disabled) {
    background: var(--pf-color-danger-600, #dc2626);
  }
  
  &:active:not(:disabled) {
    background: var(--pf-color-danger-700, #b91c1c);
  }
}

/* Full width modifier */
.full-width {
  width: 100%;
}

/* Icon-only modifier */
.icon-only {
  padding-left: var(--pf-spacing-3);
  padding-right: var(--pf-spacing-3);
}

.icon-only.size-sm {
  padding-left: var(--pf-spacing-2);
  padding-right: var(--pf-spacing-2);
}

.icon-only.size-lg {
  padding-left: var(--pf-spacing-4);
  padding-right: var(--pf-spacing-4);
}

/* Loading state */
.loading {
  pointer-events: none;
}

.loading-spinner {
  animation: spin 1s linear infinite;
}

@keyframes spin {
  from {
    transform: rotate(0deg);
  }
  to {
    transform: rotate(360deg);
  }
}